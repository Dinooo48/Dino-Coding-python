import pandas as pd

# Contoh data
data = {
    'text': [
        'Saya sangat bahagia hari ini!',
        'Hari ini sangat buruk.',
        'Saya merasa sedih.',
        'Ini adalah hari yang luar biasa.',
        'Saya marah karena terlambat.',
        'Sangat menyenangkan!',
        'Saya kecewa dengan hasilnya.'
    ],
    'emotion': [
        'senang',
        'sedih',
        'sedih',
        'senang',
        'marah',
        'senang',
        'kecewa'
    ]
}

# Membuat DataFrame
df = pd.DataFrame(data)
from sklearn.feature_extraction.text import CountVectorizer

# Inisialisasi CountVectorizer
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['text'])
y = df['emotion']
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split

# Membagi data menjadi train dan test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Inisialisasi dan melatih model
model = MultinomialNB()
model.fit(X_train, y_train)

# Menghitung akurasi
accuracy = model.score(X_test, y_test)
print(f'Akurasi model: {accuracy:.2f}')
# Prediksi emosi untuk kalimat baru
new_texts = [
    'Saya merasa sangat senang!',
    'Hidup ini penuh likaliku.',
    'Saya merasa sangat marah hari ini.'
]

new_X = vectorizer.transform(new_texts)
predictions = model.predict(new_X)
print(predictions)
import matplotlib.pyplot as plt

# Menghitung frekuensi emosi
emotion_counts = pd.Series(predictions).value_counts()

# Membuat diagram batang
plt.bar(emotion_counts.index, emotion_counts.values)
plt.xlabel('Emosi')
plt.ylabel('Frekuensi')
plt.title('Prediksi Emosi dari Teks Baru')
plt.show()
